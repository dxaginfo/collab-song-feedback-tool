version: '3.8'

services:
  server:
    build:
      context: .
      dockerfile: docker/Dockerfile.server
    restart: unless-stopped
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - PORT=5000
      - CLIENT_URL=http://localhost:3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=collab_song_feedback
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=development_jwt_secret
      - REDIS_URL=redis://redis:6379
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION}

  client:
    build:
      context: .
      dockerfile: docker/Dockerfile.client
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:80"
    depends_on:
      - server

  postgres:
    image: postgres:13-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=collab_song_feedback

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

volumes:
  postgres_data:
  redis_data:
